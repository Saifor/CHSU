<html>
<head>
<title>6.1. Проектирование реляционных баз данных с использованием нормализации</title>
		    <style type="text/css">
A.noneline { font-family: Arial, Serif; text-decoration: none; }
FONT.arial { font-family: Arial, Serif; }
TD.arial   { font-family: Arial, Serif; }
TH.arial   { font-family: Arial, Serif; }
PRE        { font-family: Monospace; color: navy; }
SAMP       { font-family: Monospace; color: navy; }
TT         { font-family: Monospace; color: navy; }
VAR        { font-family: Monospace; color: navy; }
</style>
</head>
<body bgcolor="#FFF5EE" text="#000000" link="#FF0000" alink="#FF0000" vlink="#A52A2A">
<basefont size="3">
<center>
<table width=100% border=0 cellpadding=0>
<tr valign=top><td class=arial><a href="http://www.citforum.ru/"><img height=50 width=150 src="_pic_/logo3D.gif" alt="Server for Information Technologies" border=0></a><br>
</td>
<td align=right class=arial>
<font size="-2">
Сервер поддерживается<br>
<a class=noneline href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>
(095) 932-9212, 932-9213, 939-0783<br>
E-mail: <a class=noneline href="mailto:info@citforum.ru?Subject='From page topic CIT-FORUM'">info@citforum.ru</a></font>
</tr>
<tr>
<th colspan=2 class=arial>
<font color=#000080 size=2><a href="http://www.citforum.ru" class=noneline>Сервер Информационных Технологий</a> содержит море(!) аналитической информации</font>
<hr noshade>
</th>
</tr>
</table>
</center>
<h4><a name="_2_3_1">6.1. Проектирование реляционных баз данных с использованием нормализации</a></h4>
<p>
Сначала будет рассмотрен классический подход, при котором весь процесс проектирования производится в терминах реляционной модели данных методом последовательных приближений к удовлетворительному набору схем отношений. Исходной точкой является представление предметной области в виде одного или нескольких отношений, и на каждом шаге проектирования производится некоторый набор схем отношений, обладающих лучшими свойствами. Процесс проектирования представляет собой процесс нормализации схем отношений, причем каждая следующая нормальная форма обладает свойствами лучшими, чем предыдущая.
<p>
Каждой нормальной форме соответствует некоторый определенный набор ограничений, и отношение находится в некоторой нормальной форме, если удовлетворяет свойственному ей набору ограничений. Примером набора ограничений является ограничение первой нормальной формы - значения всех атрибутов отношения атомарны. Поскольку требование первой нормальной формы является базовым требованием классической реляционной модели данных, мы будем считать, что исходный набор отношений уже соответствует этому требованию.
<p>
В теории реляционных баз данных обычно выделяется следующая последовательность нормальных форм:
<UL TYPE = disc>
<LI>первая нормальная форма (1NF);
<LI>вторая нормальная форма (2NF);
<LI>третья нормальная форма (3NF);
<LI>нормальная форма Бойса-Кодда (BCNF);
<LI>четвертая нормальная форма (4NF);
<LI>пятая нормальная форма, или нормальная форма проекции-соединения (5NF или PJ/NF).
</UL>
<p>
Основные свойства нормальных форм:
<UL TYPE = disc>
<LI>каждая следующая нормальная форма в некотором смысле лучше предыдущей;
<LI>при переходе к следующей нормальной форме свойства предыдущих нормальных свойств сохраняются.
</UL>
<p>
В основе процесса проектирования лежит метод нормализации, декомпозиция отношения, находящегося в предыдущей нормальной форме, в два или более отношения, удовлетворяющих требованиям следующей нормальной формы.
<p>
Наиболее важные на практике нормальные формы отношений основываются на фундаментальном в теории реляционных баз данных понятии <i>функциональной зависимости</i>. Для дальнейшего изложения нам потребуются несколько определений.
<p>
<b>Определение 1.</b> <i>Функциональная зависимость</i>
<p>
В отношении R атрибут Y функционально зависит от атрибута X (X и Y могут быть составными) в том и только в том случае, если каждому значению X соответствует в точности одно значение Y: R.X (r) R.Y.
<p>
<b>Определение 2.</b> <i>Полная функциональная зависимость</i>
<p>
Функциональная зависимость R.X (r) R.Y называется полной, если атрибут Y не зависит функционально от любого точного подмножества X.
<p>
<b>Определение 3. </b><i>Транзитивная функциональная зависимость</i>
<p>
Функциональная зависимость R.X <tt>-></tt> R.Y называется транзитивной, если существует такой атрибут Z, что имеются функциональные зависимости R.X <tt>-></tt> R.Z и R.Z <tt>-></tt> R.Y и отсутствует функциональная зависимость R.Z --&gt; R.X. (При отсутствии последнего требования мы имели бы &quot;неинтересные&quot; транзитивные зависимости в любом отношении, обладающем несколькими ключами.)
<p>
<b>Определение 4.</b> <i>Неключевой атрибут</i>
<p>
Неключевым атрибутом называется любой атрибут отношения, не входящий в состав первичного ключа (в частности, первичного).
<p>
<b>Определение 5.</b> <i>Взаимно независимые атрибуты</i>
<p>
Два или более атрибута взаимно независимы, если ни один из этих атрибутов не является функционально зависимым от других.
<h5><a name="_2_3_1_1">6.1.1. Вторая нормальная форма</a></h5>
<p>
Рассмотрим следующий пример схемы отношения:
<p>
СОТРУДНИКИ-ОТДЕЛЫ-ПРОЕКТЫ
<p>
(СОТР_НОМЕР, СОТР_ЗАРП, ОТД_НОМЕР, ПРО_НОМЕР, СОТР_ЗАДАН)
<p>
Первичный ключ:
<p>
СОТР_НОМЕР, ПРО_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР <tt>-></tt> СОТР_ЗАРП
<p>
СОТР_НОМЕР <tt>-></tt> ОТД_НОМЕР
<p>
ОТД_НОМЕР <tt>-></tt> СОТР_ЗАРП
<p>
СОТР_НОМЕР, ПРО_НОМЕР <tt>-></tt> СОТР_ЗАДАН
<p>
Как видно, хотя первичным ключом является составной атрибут СОТР_НОМЕР, ПРО_НОМЕР, атрибуты СОТР_ЗАРП и ОТД_НОМЕР функционально зависят от части первичного ключа, атрибута СОТР_НОМЕР. В результате мы не сможем вставить в отношение СОТРУДНИКИ-ОТДЕЛЫ-ПРОЕКТЫ кортеж, описывающий сотрудника, который еще не выполняет никакого проекта (первичный ключ не может содержать неопределенное значение). При удалении кортежа мы не только разрушаем связь данного сотрудника с данным проектом, но утрачиваем информацию о том, что он работает в некотором отделе. При переводе сотрудника в другой отдел мы будем вынуждены модифицировать все кортежи, описывающие этого сотрудника, или получим несогласованный результат. Такие неприятные явления называются аномалиями схемы отношения. Они устраняются путем нормализации.
<p>
<b>Определение 6.</b> <i>Вторая нормальная форма (в этом определении предполагается, что единственным ключом отношения является первичный ключ)</i>
<p>
Отношение R находится во второй нормальной форме (2NF) в том и только в том случае, когда находится в 1NF, и каждый неключевой атрибут полностью зависит от первичного ключа.
<p>
Можно произвести следующую декомпозицию отношения СОТРУДНИКИ-ОТДЕЛЫ-ПРОЕКТЫ в два отношения СОТРУДНИКИ-ОТДЕЛЫ и СОТРУДНИКИ-ПРОЕКТЫ:
<p>
СОТРУДНИКИ-ОТДЕЛЫ (СОТР_НОМЕР, СОТР_ЗАРП, ОТД_НОМЕР)
<p>
Первичный ключ:
<p>
СОТР_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР <tt>-></tt> СОТР_ЗАРП
<p>
СОТР_НОМЕР <tt>-></tt> ОТД_НОМЕР
<p>
ОТД_НОМЕР <tt>-></tt> СОТР_ЗАРП
<p>
СОТРУДНИКИ-ПРОЕКТЫ (СОТР_НОМЕР, ПРО_НОМЕР, СОТР_ЗАДАН)
<p>
Первичный ключ:
<p>
СОТР_НОМЕР, ПРО_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР, ПРО_НОМЕР <tt>-></tt> CОТР_ЗАДАН
<p>
Каждое из этих двух отношений находится в 2NF, и в них устранены отмеченные выше аномалии (легко проверить, что все указанные операции выполняются без проблем).
<p>
Если допустить наличие нескольких ключей, то определение 6 примет следующий вид:
<p>
<b>Определение 6~
</b><p>
Отношение R находится во второй нормальной форме (2NF) в том и только в том случае, когда оно находится в 1NF, и каждый неключевой атрибут полностью зависит от каждого ключа R.
<p>
Здесь и далее мы не будем приводить примеры для отношений с несколькими ключами. Они слишком громоздки и относятся к ситуациям, редко встречающимся на практике.
<h5><a name="_2_3_1_2">6.1.2. Третья нормальная форма</a></h5>
<p>
Рассмотрим еще раз отношение СОТРУДНИКИ-ОТДЕЛЫ, находящееся в 2NF. Заметим, что функциональная зависимость СОТР_НОМЕР <tt>-></tt> СОТР_ЗАРП является транзитивной; она является следствием функциональных зависимостей СОТР_НОМЕР <tt>-></tt> ОТД_НОМЕР и ОТД_НОМЕР <tt>-></tt> СОТР_ЗАРП. Другими словами, заработная плата сотрудника на самом деле является характеристикой не сотрудника, а отдела, в котором он работает (это не очень естественное предположение, но достаточное для примера).
<p>
В результате мы не сможем занести в базу данных информацию, характеризующую заработную плату отдела, до тех пор, пока в этом отделе не появится хотя бы один сотрудник (первичный ключ не может содержать неопределенное значение). При удалении кортежа, описывающего последнего сотрудника данного отдела, мы лишимся информации о заработной плате отдела. Чтобы согласованным образом изменить заработную плату отдела, мы будем вынуждены предварительно найти все кортежи, описывающие сотрудников этого отдела. Т.е. в отношении СОТРУДИКИ-ОТДЕЛЫ по-прежнему существуют аномалии. Их можно устранить путем дальнейшей нормализации.
<p>
<b>Определение 7.</b> <i>Третья нормальная форма. (Снова определение дается в предположении существования единственного ключа.)</i>
<p>
Отношение R находится в третьей нормальной форме (3NF) в том и только в том случае, если находится в 2NF и каждый неключевой атрибут нетранзитивно зависит от первичного ключа.
<p>
Можно произвести декомпозицию отношения СОТРУДНИКИ-ОТДЕЛЫ в два отношения СОТРУДНИКИ и ОТДЕЛЫ:
<p>
СОТРУДНИКИ (СОТР_НОМЕР, ОТД_НОМЕР)
<p>
Первичный ключ:
<p>
СОТР_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР <tt>-></tt> ОТД_НОМЕР
<p>
ОТДЕЛЫ (ОТД_НОМЕР, СОТР_ЗАРП)
<p>
Первичный ключ:
<p>
ОТД_НОМЕР
<p>
Функциональные зависимости:
<p>
ОТД_НОМЕР <tt>-></tt> СОТР_ЗАРП
<p>
Каждое из этих двух отношений находится в 3NF и свободно от отмеченных аномалий.
<p>
Если отказаться от того ограничения, что отношение обладает единственным ключом, то определение 3NF примет следующую форму:
<p>
<b>Определение 7~
</b><p>
Отношение R находится в третьей нормальной форме (3NF) в том и только в том случае, если находится в 1NF, и каждый неключевой атрибут не является транзитивно зависимым от какого-либо ключа R.
<p>
На практике третья нормальная форма схем отношений достаточна в большинстве случаев, и приведением к третьей нормальной форме процесс проектирования реляционной базы данных обычно заканчивается. Однако иногда полезно продолжить процесс нормализации.
<h5><a name="_2_3_1_3">6.1.3. Нормальная форма Бойса-Кодда</a></h5>
<p>
Рассмотрим следующий пример схемы отношения:
<p>
СОТРУДНИКИ-ПРОЕКТЫ (СОТР_НОМЕР, СОТР_ИМЯ, ПРО_НОМЕР, СОТР_ЗАДАН)
<p>
Возможные ключи:
<p>
СОТР_НОМЕР, ПРО_НОМЕР
<p>
СОТР_ИМЯ, ПРО_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР <tt>-></tt> CОТР_ИМЯ
<p>
СОТР_НОМЕР <tt>-></tt> ПРО_НОМЕР
<p>
СОТР_ИМЯ <tt>-></tt> CОТР_НОМЕР
<p>
СОТР_ИМЯ <tt>-></tt> ПРО_НОМЕР
<p>
СОТР_НОМЕР, ПРО_НОМЕР <tt>-></tt> CОТР_ЗАДАН
<p>
СОТР_ИМЯ, ПРО_НОМЕР <tt>-></tt> CОТР_ЗАДАН
<p>
В этом примере мы предполагаем, что личность сотрудника полностью определяется как его номером, так и именем (это снова не очень жизненное предположение, но достаточное для примера).
<p>
В соответствии с определением 7~ отношение СОТРУДНИКИ-ПРОЕКТЫ находится в 3NF. Однако тот факт, что имеются функциональные зависимости атрибутов отношения от атрибута, являющегося частью первичного ключа, приводит к аномалиям. Например, для того, чтобы изменить имя сотрудника с данным номером согласованным образом, нам потребуется модифицировать все кортежи, включающие его номер.
<p>
<b>Определение 8.</b> <i>Детерминант</i>
<p>
Детерминант - любой атрибут, от которого полностью функционально зависит некоторый другой атрибут.
<p>
<b>Определение 9.</b> <i>Нормальная форма Бойса-Кодда</i>
<p>
Отношение R находится в нормальной форме Бойса-Кодда (BCNF) в том и только в том случае, если каждый детерминант является возможным ключом.
<p>
Очевидно, что это требование не выполнено для отношения СОТРУДНИКИ-ПРОЕКТЫ. Можно произвести его декомпозицию к отношениям СОТРУДНИКИ и СОТРУДНИКИ-ПРОЕКТЫ:
<p>
СОТРУДНИКИ (СОТР_НОМЕР, СОТР_ИМЯ)
<p>
Возможные ключи:
<p>
СОТР_НОМЕР
<p>
СОТР_ИМЯ
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР <tt>-></tt> CОТР_ИМЯ
<p>
СОТР_ИМЯ <tt>-></tt> СОТР_НОМЕР
<p>
СОТРУДНИКИ-ПРОЕКТЫ (СОТР_НОМЕР, ПРО_НОМЕР, СОТР_ЗАДАН)
<p>
Возможный ключ:
<p>
СОТР_НОМЕР, ПРО_НОМЕР
<p>
Функциональные зависимости:
<p>
СОТР_НОМЕР, ПРО_НОМЕР <tt>-></tt> CОТР_ЗАДАН
<p>
Возможна альтернативная декомпозиция, если выбрать за основу СОТР_ИМЯ. В обоих случаях получаемые отношения СОТРУДНИКИ и СОТРУДНИКИ-ПРОЕКТЫ находятся в BCNF, и им не свойственны отмеченные аномалии.
<h5><a name="_2_3_1_4">6.1.4. Четвертая нормальная форма</a></h5>
<p>
Рассмотрим пример следующей схемы отношения:
<p>
ПРОЕКТЫ (ПРО_НОМЕР,ПРО_СОТР, ПРО_ЗАДАН)
<p>
Отношение ПРОЕКТЫ содержит номера проектов, для каждого проекта список сотрудников, которые могут выполнять проект, и список заданий, предусматриваемых проектом. Сотрудники могут участвовать в нескольких проектах, и разные проекты могут включать одинаковые задания.
<p>
Каждый кортеж отношения связывает некоторый проект с сотрудником, участвующим в этом проекте, и заданием, который сотрудник выполняет в рамках данного проекта (мы предполагаем, что любой сотрудник, участвующий в проекте, выполняет все задания, предусмотренные этим проектом). По причине сформулированных выше условий единственным возможным ключем отношения является составной атрибут ПРО_НОМЕР, ПРО_СОТР, ПРО_ЗАДАН, и нет никаких других детерминантов. Следовательно, отношение ПРОЕКТЫ находится в BCNF. Но при этом оно обладает недостатками: если, например, некоторый сотрудник присоединяется к данному проекту, необходимо вставить в отношение ПРОЕКТЫ столько кортежей, сколько заданий в нем предусмотрено.
<p>
<b>Определение 10.</b> <i>Многозначные зависимости</i>
<p>
В отношении R (A, B, C) существует многозначная зависимость R.A <tt>-></tt> <tt>-></tt> R.B в том и только в том случае, если множество значений B, соответствующее паре значений A и C, зависит только от A и не зависит от С.
<p>
В отношении ПРОЕКТЫ существуют следующие две многозначные зависимости:
<p>
ПРО_НОМЕР <tt>-></tt> <tt>-></tt> ПРО_СОТР
<p>
ПРО_НОМЕР <tt>-></tt> <tt>-></tt> ПРО_ЗАДАН
<p>
Легко показать, что в общем случае в отношении R (A, B, C) существует многозначная зависимость R.A <tt>-></tt> <tt>-></tt> R.B в том и только в том случае, когда существует многозначная зависимость R.A <tt>-></tt> <tt>-></tt> R.C.
<p>
Дальнейшая нормализация отношений, подобных отношению ПРОЕКТЫ, основывается на следующей теореме:
<p>
<b>Теорема Фейджина
</b><p>
Отношение R (A, B, C) можно спроецировать без потерь в отношения R1 (A, B) и R2 (A, C) в том и только в том случае, когда существует MVD A <tt>-></tt> <tt>-></tt> B | C.
<p>
Под проецированием без потерь понимается такой способ декомпозиции отношения, при котором исходное отношение полностью и без избыточности восстанавливается путем естественного соединения полученных отношений.
<p>
<b>Определение 11.</b> <i>Четвертая нормальная форма</i>
<p>
Отношение R находится в четвертой нормальной форме (4NF) в том и только в том случае, если в случае существования многозначной зависимости A <tt>-></tt> <tt>-></tt> B все остальные атрибуты R функционально зависят от A.
<p>
В нашем примере можно произвести декомпозицию отношения ПРОЕКТЫ в два отношения ПРОЕКТЫ-СОТРУДНИКИ и ПРОЕКТЫ-ЗАДАНИЯ:
<p>
ПРОЕКТЫ-СОТРУДНИКИ (ПРО_НОМЕР, ПРО_СОТР)
<p>
ПРОЕКТЫ-ЗАДАНИЯ (ПРО_НОМЕР, ПРО_ЗАДАН)
<p>
Оба эти отношения находятся в 4NF и свободны от отмеченных аномалий.
<h5><a name="_2_3_1_5">6.1.5. Пятая нормальная форма</a></h5>
<p>
Во всех рассмотренных до этого момента нормализациях производилась декомпозиция одного отношения в два. Иногда это сделать не удается, но возможна декомпозиция в большее число отношений, каждое из которых обладает лучшими свойствами.
<p>
Рассмотрим, например, отношение
<p>
СОТРУДНИКИ-ОТДЕЛЫ-ПРОЕКТЫ (СОТР_НОМЕР, ОТД_НОМЕР, ПРО_НОМЕР)
<p>
Предположим, что один и тот же сотрудник может работать в нескольких отделах и работать в каждом отделе над несколькими проектами. Первичным ключем этого отношения является полная совокупность его атрибутов, отсутствуют функциональные и многозначные зависимости.
<p>
Поэтому отношение находится в 4NF. Однако в нем могут существовать аномалии, которые можно устранить путем декомпозиции в три отношения.
<p>
<b>Определение 12.</b> <i>Зависимость соединения</i>
<p>
Отношение R (X, Y, ..., Z) удовлетворяет зависимости соединения * (X, Y, ..., Z) в том и только в том случае, когда R восстанавливается без потерь путем соединения своих проекций на X, Y, ..., Z.
<p>
<b>Определение 13.</b> <i>Пятая нормальная форма</i>
<p>
Отношение R находится в пятой нормальной форме (нормальной форме проекции-соединения - PJ/NF) в том и только в том случае, когда любая зависимость соединения в R следует из существования некоторого возможного ключа в R.
<p>
Введем следующие имена составных атрибутов:
<p>
СО = {СОТР_НОМЕР, ОТД_НОМЕР}
<p>
СП = {СОТР_НОМЕР, ПРО_НОМЕР}
<p>
ОП = {ОТД_НОМЕР, ПРО_НОМЕР}
<p>
Предположим, что в отношении СОТРУДНИКИ-ОТДЕЛЫ-ПРОЕКТЫ существует зависимость соединения:
<p>
* (СО, СП, ОП)
<p>
На примерах легко показать, что при вставках и удалениях кортежей могут возникнуть проблемы. Их можно устранить путем декомпозиции исходного отношения в три новых отношения:
<p>
СОТРУДНИКИ-ОТДЕЛЫ (СОТР_НОМЕР, ОТД_НОМЕР)
<p>
СОТРУДНИКИ-ПРОЕКТЫ (СОТР_НОМЕР, ПРО_НОМЕР)
<p>
ОТДЕЛЫ-ПРОЕКТЫ (ОТД_НОМЕР, ПРО_НОМЕР)
<p>
Пятая нормальная форма - это последняя нормальная форма, которую можно получить путем декомпозиции. Ее условия достаточно нетривиальны, и на практике 5NF не используется. Заметим, что зависимость соединения является обобщением как многозначной зависимости, так и функциональной зависимости.
<p><center><a href="glava_22.htm">Предыдущая глава</a> || <a href="contents.htm">Оглавление</a> || <a href="glava_24.htm">Следующая глава</a><p>
<p></p>
<hr noshade>
<center>
<font size=1 class=arial>
Comments: <a href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM'" class=noneline>info@citmgu.ru</a><br>
Copyright &copy; <a href="http://www.citmgu.ru/" class=noneline>CIT</a>
</font></center></body></html>
