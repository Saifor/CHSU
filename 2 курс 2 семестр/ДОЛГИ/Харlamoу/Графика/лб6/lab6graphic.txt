import bpy
import random

# Очистка сцены
bpy.ops.wm.read_factory_settings(use_empty=True)

# Параметры башни
count_floors = 10  # Количество этажей
min = 1  # Минимальное количество примитивов на этаже
max = 5 # Максимальное количество примитивов на этаже
height = 2  # Высота каждого этажа
lenX = 2
lenY = 1
lenZ = 1

def createCube(num):
    bpy.ops.mesh.primitive_cube_add(
        location=(0 if yRot == 0 else (-num -1 if num == 1 else num ), 0 if yRot != 0 else (-num - 1 if num == 1 else num ) , floor * height),
        rotation=(0,0,yRot),
        scale=(lenX,lenY,lenZ))
def createCone(num):
    bpy.ops.mesh.primitive_cone_add(
        location=(0 if yRot == 0 else (-num -1 if num == 1 else num ), 0 if yRot != 0 else (-num - 1 if num == 1 else num ) , floor * height),
        rotation=(0,0,yRot),
        scale=(lenX,lenY,lenZ))
def createCin(num):
    bpy.ops.mesh.primitive_cylinder_add(
        location=(0 if yRot == 0 else (-num -1 if num == 1 else num ), 0 if yRot != 0 else (-num - 1 if num == 1 else num ) , floor * height),
        rotation=(0,0,yRot),
        scale=(lenX,lenY,lenZ))



    
# Создание башни
for floor in range(count_floors):
    num_primitives = random.randint(min, max)
    yRot =  1.5708 if floor % 2 == 0 else 0
    for num in range(num_primitives):
        i = random.randint(0,3)
        if i == 0:
            createCube(num)
        elif i == 1:
             createCone(num)
        else:
             createCin(num)
        